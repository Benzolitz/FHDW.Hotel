<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FHDW.Hotel.Repository</name>
    </assembly>
    <members>
        <member name="T:FHDW.Hotel.Repository.Database.fhdwhotel">
            <summary>
            
            </summary>
        </member>
        <member name="M:FHDW.Hotel.Repository.Database.fhdwhotel.#ctor(System.Data.Common.DbConnection,System.Boolean)">
            <summary>
            
            </summary>
            <param name="p_existingConnection"></param>
            <param name="p_contextOwnsConnection"></param>
        </member>
        <member name="T:FHDW.Hotel.Repository.Repositories.AdminRepository">
            <summary>
            Every Request returning an Admin-Object will be handled in this Repository.
            </summary>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.AdminRepository.GetByUsername(System.String)">
            <summary>
            Request an Admin-Object from the Database, with the username.
            </summary>
            <param name="p_username">Username of the Administrator.</param>
            <returns>The found Adminobject will be returned. If no Admin was found, NULL will be returned. </returns>
        </member>
        <member name="T:FHDW.Hotel.Repository.Repositories.BaseRepository">
            <summary>
            
            </summary>
            <creator>Viktoria Pierenkemper</creator>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.BaseRepository.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:FHDW.Hotel.Repository.Repositories.BookingRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.BookingRepository.Insert(FHDW.Hotel.DomainModel.Booking)">
            <summary>
            
            </summary>
            <param name="p_booking"></param>
            <returns></returns>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.BookingRepository.Update(FHDW.Hotel.DomainModel.Booking)">
            <summary>
            
            </summary>
            <param name="p_booking"></param>
            <returns></returns>
        </member>
        <member name="T:FHDW.Hotel.Repository.Repositories.GuestRepository">
            <summary>
            Every Request returning a Guest-Object will be handled in this Repository.
            </summary>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.GuestRepository.GetByEmail(System.String)">
            <summary>
            Get a specific Guest by their Emailaddress.
            </summary>
            <param name="p_email">Emailaddress of the Guest.</param>
            <returns>The requested Guest. If no Guest exists, return NULL.</returns>
            <creator>Viktoria Pierenkemper</creator>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.GuestRepository.Insert(FHDW.Hotel.DomainModel.Guest)">
            <summary>
            Insert a new Guest into the database.
            </summary>
            <param name="p_guest">The new Guest.</param>
            <returns>The Newly created Guest. NULL, or Exception if an error occurs.</returns>
            <creator>Viktoria Pierenkemper</creator>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.GuestRepository.Update(FHDW.Hotel.DomainModel.Guest)">
            <summary>
            Update an existing Guest in the databse.
            </summary>
            <param name="p_guest">New Guest-Object.</param>
            <returns>The updated Guest-Object. NULL, or Exception if an error occurs.</returns>
            <creator>Viktoria Pierenkemper</creator>
        </member>
        <member name="T:FHDW.Hotel.Repository.Repositories.HotelRepository">
            <summary>
            Every Request returning a Hotel-Object will be handled in this Repository.
            </summary>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.HotelRepository.GetCollection">
            <summary>
            Get a List of all Hotels in the database.
            </summary>
            <returns>List with all Hotels. If no Hotel exists, return an empty List.</returns>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.HotelRepository.GetById(System.Int32)">
            <summary>
            Get a specific Hotel.
            </summary>
            <param name="p_id">ID of the Hotel</param>
            <returns>The requested Hotel. If no Hotel exists, return NULL.</returns>
            <creator>Viktoria Pierenkemper</creator>
        </member>
        <member name="T:FHDW.Hotel.Repository.Repositories.RoomRepository">
            <summary>
            Every Request returning a Room-Object will be handled in this Repository.
            </summary>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.RoomRepository.GetById(System.Int32)">
            <summary>
            Get a specific Room by ID.
            </summary>
            <param name="p_id">ID of the Room.</param>
            <returns>The requested Hotel. If no Hotel exists, return NULL.</returns>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.RoomRepository.GetCollectionByHotel(FHDW.Hotel.DomainModel.Hotel)">
            <summary>
            
            </summary>
            <param name="p_hotel"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.RoomRepository.GetAvailableRooms(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Get a List of all Rooms, wich are not already booked in a specific timeframe.
            </summary>
            <param name="p_hotelId"></param>
            <param name="p_arrival">The Arrivaldate of the Guest.</param>
            <param name="p_departure">The Departuredate of the Guest.</param>
            <returns>List with all Rooms. If no Room exists, return an empty List.</returns>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.RoomRepository.Insert(FHDW.Hotel.DomainModel.Room)">
            <summary>
            Insert a new Room into the databse.
            </summary>
            <param name="p_room">The new Room.</param>
            <returns>The Newly created Room-Object. NULL, or Exception if an error occurs.</returns>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.RoomRepository.Update(FHDW.Hotel.DomainModel.Room)">
            <summary>
            Update an existing Room in the Database.
            </summary>
            <param name="p_room">Room to Update.</param>
            <returns>The updated Room-Object. NULL, or Exception if an error occurs.</returns>
        </member>
        <member name="M:FHDW.Hotel.Repository.Repositories.RoomRepository.Delete(FHDW.Hotel.DomainModel.Room)">
            <summary>
            
            </summary>
            <param name="p_id"></param>
            <returns>The deleted Room-Object. NULL, or Exception if an error occurs.</returns>
        </member>
    </members>
</doc>
